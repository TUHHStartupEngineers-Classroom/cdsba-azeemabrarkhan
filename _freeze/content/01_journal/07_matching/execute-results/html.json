{
  "hash": "143d38d54f063e04c5af9417ce14f7e9",
  "result": {
    "markdown": "---\ntitle: \"Matching and Subclassification\"\n---\n\n\n\n\nImagine, the following situation. You are running an online store and one year ago, you introduced a plus membership to bind customers to your store and increase revenue. The plus memberships comes at a small cost for the customers, which is why not all of the customers subscribed. Now you want to examine whether binding customers by this membership program in fact increases your sales with subscribed customers. But of course, there are potentially confounding variables such as age, sex or pre_avg_purch (previous average purchases).\n\nLoad the data membership.rds. Then,\n\n# 1\n* Check the relationships between the variables and draw a DAG as you understand the relations.\n\n::: {.cell hash='07_matching_cache/html/unnamed-chunk-2_c57fbaea0b0ac194ed2f99d4813a4349'}\n\n```{.r .cell-code}\n# reading the RDS file and print summary\ndf <- readRDS(\"../data/membership.rds\")\nsummary(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>       age             sex         pre_avg_purch         card       \n#>  Min.   :16.00   Min.   :0.0000   Min.   :-14.23   Min.   :0.0000  \n#>  1st Qu.:29.80   1st Qu.:0.0000   1st Qu.: 51.82   1st Qu.:0.0000  \n#>  Median :38.80   Median :1.0000   Median : 70.15   Median :0.0000  \n#>  Mean   :40.37   Mean   :0.5038   Mean   : 70.42   Mean   :0.4232  \n#>  3rd Qu.:49.20   3rd Qu.:1.0000   3rd Qu.: 88.79   3rd Qu.:1.0000  \n#>  Max.   :90.00   Max.   :1.0000   Max.   :169.42   Max.   :1.0000  \n#>    avg_purch     \n#>  Min.   :-28.61  \n#>  1st Qu.: 54.02  \n#>  Median : 76.24  \n#>  Mean   : 76.61  \n#>  3rd Qu.: 98.54  \n#>  Max.   :192.91\n```\n:::\n:::\n\n::: {.cell hash='07_matching_cache/html/unnamed-chunk-3_a49b960f1b907532c113992ff212fe25'}\n\n```{.r .cell-code}\n# Define DAG\ndag_model <- 'dag {\n  bb=\"0,0,1,1\"\n  \"Card\" [exposure,pos=\"0,2\"]\n  \"Previous avergage purchase\" [pos=\"0.25,2\"]\n  \"Average purchase\" [outcome,pos=\"0.5,2\"]\n  \"Age\" [pos=\"0.25,4\"]\n  \"Sex\" [pos=\"0.25,0\"]\n  \n  \"Previous avergage purchase\" -> \"Average purchase\"\n  \"Previous avergage purchase\" -> \"Card\"\n  \"Age\" -> \"Card\"\n  \"Age\" -> \"Previous avergage purchase\"\n  \"Age\" -> \"Average purchase\"\n  \"Sex\" -> \"Card\"\n  \"Sex\" -> \"Previous avergage purchase\"\n  \"Sex\" -> \"Average purchase\"\n}'\n\n# DAG with adjustment sets (and custom layout)\nggdag_adjustment_set(dag_model, shadow = T, text = F) +\n  guides(color = \"none\") +  # Turn off legend\n  theme_dag_gray()+\n  geom_dag_text(color = NA) +\n  geom_dag_edges(edge_color = \"black\") +\n  geom_dag_label_repel(aes(label = name))\n```\n\n::: {.cell-output-display}\n![](07_matching_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n# 2\n* Compute a naive estimate of the average treatment effect.\n\n\n::: {.cell hash='07_matching_cache/html/unnamed-chunk-4_33af5a9513083ece014baf1067aeb96e'}\n\n```{.r .cell-code}\ndf %>%\n  group_by(as.logical(card)) %>%\n  summarise(mean_value = mean(avg_purch)) %>%\n  mutate(mean_difference = diff(mean_value))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"as.logical(card)\"],\"name\":[1],\"type\":[\"lgl\"],\"align\":[\"right\"]},{\"label\":[\"mean_value\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"mean_difference\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"FALSE\",\"2\":\"65.93965\",\"3\":\"25.2195\"},{\"1\":\"TRUE\",\"2\":\"91.15916\",\"3\":\"25.2195\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell hash='07_matching_cache/html/unnamed-chunk-5_b10eaf52e55eb34bbfaf8ee8a1966829'}\n\n```{.r .cell-code}\n# Another representation\nmean(df[df$card==1, ]$avg_purch) - mean(df[df$card==0, ]$avg_purch)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 25.2195\n```\n:::\n:::\n\n::: {.cell hash='07_matching_cache/html/unnamed-chunk-6_ff6e9126cd5a3b8ea3abfcd456a13377'}\n\n```{.r .cell-code}\n# We can also build a naive model\n\nmodel_naive <- lm(avg_purch ~ card, data = df)\nsummary(model_naive)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = avg_purch ~ card, data = df)\n#> \n#> Residuals:\n#>      Min       1Q   Median       3Q      Max \n#> -101.515  -20.684   -0.199   20.424  120.166 \n#> \n#> Coefficients:\n#>             Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept)  65.9397     0.3965  166.29   <2e-16 ***\n#> card         25.2195     0.6095   41.38   <2e-16 ***\n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 30.11 on 9998 degrees of freedom\n#> Multiple R-squared:  0.1462,\tAdjusted R-squared:  0.1461 \n#> F-statistic:  1712 on 1 and 9998 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n\n# 3\nUse the following matching methods to obtain more precise estimates\n\n## (Coarsened) Exact Matching\n\n\n::: {.cell hash='07_matching_cache/html/unnamed-chunk-7_f3aac7894d1067073b5ae2a840a73b88'}\n\n```{.r .cell-code}\ncem <- matchit(card ~ age + sex + pre_avg_purch,\n               data = df, \n               method = 'cem', \n               estimand = 'ATE')\nsummary(cem)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> matchit(formula = card ~ age + sex + pre_avg_purch, data = df, \n#>     method = \"cem\", estimand = \"ATE\")\n#> \n#> Summary of Balance for All Data:\n#>               Means Treated Means Control Std. Mean Diff. Var. Ratio eCDF Mean\n#> age                 42.0331       39.1574          0.2136     1.1524    0.0438\n#> sex                  0.5087        0.5002          0.0171          .    0.0086\n#> pre_avg_purch       76.3938       66.0438          0.3962     1.0276    0.1092\n#>               eCDF Max\n#> age             0.0864\n#> sex             0.0086\n#> pre_avg_purch   0.1545\n#> \n#> Summary of Balance for Matched Data:\n#>               Means Treated Means Control Std. Mean Diff. Var. Ratio eCDF Mean\n#> age                 40.1743       40.1557          0.0014     0.9993    0.0016\n#> sex                  0.5040        0.5040          0.0000          .    0.0000\n#> pre_avg_purch       70.4611       70.0938          0.0141     0.9929    0.0044\n#>               eCDF Max Std. Pair Dist.\n#> age             0.0064          0.1222\n#> sex             0.0000          0.0000\n#> pre_avg_purch   0.0130          0.1558\n#> \n#> Sample Sizes:\n#>               Control Treated\n#> All           5768.      4232\n#> Matched (ESS) 5429.65    3844\n#> Matched       5716.      4164\n#> Unmatched       52.        68\n#> Discarded        0.         0\n```\n:::\n:::\n\n::: {.cell hash='07_matching_cache/html/unnamed-chunk-8_c2a60335e97e3bdd0bb9be41be38e37b'}\n\n```{.r .cell-code}\ndf_cem <- match.data(cem)\nmodel_cem <- lm(avg_purch ~ card, data = df_cem, weights = weights)\nsummary(model_cem)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = avg_purch ~ card, data = df_cem, weights = weights)\n#> \n#> Weighted Residuals:\n#>      Min       1Q   Median       3Q      Max \n#> -159.349  -20.459   -0.151   19.863  161.528 \n#> \n#> Coefficients:\n#>             Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept)  69.9896     0.3984  175.66   <2e-16 ***\n#> card         15.2043     0.6137   24.77   <2e-16 ***\n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 30.12 on 9878 degrees of freedom\n#> Multiple R-squared:  0.0585,\tAdjusted R-squared:  0.0584 \n#> F-statistic: 613.7 on 1 and 9878 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n\n## Nearest-Neighbor Matching\n\n\n::: {.cell hash='07_matching_cache/html/unnamed-chunk-9_1d11f775f60c6fa91ac54c3bcf5c94a3'}\n\n```{.r .cell-code}\nnn <- matchit(card ~ age + sex + pre_avg_purch,\n              data = df,\n              method = \"nearest\",\n              distance = \"mahalanobis\",\n              replace = T)\nsummary(nn)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> matchit(formula = card ~ age + sex + pre_avg_purch, data = df, \n#>     method = \"nearest\", distance = \"mahalanobis\", replace = T)\n#> \n#> Summary of Balance for All Data:\n#>               Means Treated Means Control Std. Mean Diff. Var. Ratio eCDF Mean\n#> age                 42.0331       39.1574          0.2064     1.1524    0.0438\n#> sex                  0.5087        0.5002          0.0171          .    0.0086\n#> pre_avg_purch       76.3938       66.0438          0.3936     1.0276    0.1092\n#>               eCDF Max\n#> age             0.0864\n#> sex             0.0086\n#> pre_avg_purch   0.1545\n#> \n#> Summary of Balance for Matched Data:\n#>               Means Treated Means Control Std. Mean Diff. Var. Ratio eCDF Mean\n#> age                 42.0331       41.9964          0.0026     1.0171    0.0014\n#> sex                  0.5087        0.5087          0.0000          .    0.0000\n#> pre_avg_purch       76.3938       76.2937          0.0038     1.0178    0.0012\n#>               eCDF Max Std. Pair Dist.\n#> age             0.0061          0.0281\n#> sex             0.0000          0.0000\n#> pre_avg_purch   0.0076          0.0301\n#> \n#> Sample Sizes:\n#>               Control Treated\n#> All           5768.      4232\n#> Matched (ESS) 1992.19    4232\n#> Matched       2677.      4232\n#> Unmatched     3091.         0\n#> Discarded        0.         0\n```\n:::\n:::\n\n::: {.cell hash='07_matching_cache/html/unnamed-chunk-10_c23bc30ed05482aef96d9f26cf1bb37d'}\n\n```{.r .cell-code}\ndf_nn <- match.data(nn)\n\nmodel_nn <- lm(avg_purch ~ card, data = df_nn, weights = weights)\nsummary(model_nn)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = avg_purch ~ card, data = df_nn, weights = weights)\n#> \n#> Weighted Residuals:\n#>      Min       1Q   Median       3Q      Max \n#> -132.730  -21.288   -1.675   18.318  146.631 \n#> \n#> Coefficients:\n#>             Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept)  76.5634     0.5881  130.19   <2e-16 ***\n#> card         14.5957     0.7514   19.42   <2e-16 ***\n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 30.43 on 6907 degrees of freedom\n#> Multiple R-squared:  0.05179,\tAdjusted R-squared:  0.05166 \n#> F-statistic: 377.3 on 1 and 6907 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n\n## Inverse Probability Weighting\n\n\n::: {.cell hash='07_matching_cache/html/unnamed-chunk-11_913c2b1bb058a987f04faada48a9bcf9'}\n\n```{.r .cell-code}\nmodel_prop <- glm(card ~ age + sex + pre_avg_purch,\n                  data = df,\n                  family = binomial(link = \"logit\"))\nsummary(model_prop)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> glm(formula = card ~ age + sex + pre_avg_purch, family = binomial(link = \"logit\"), \n#>     data = df)\n#> \n#> Coefficients:\n#>                 Estimate Std. Error z value Pr(>|z|)    \n#> (Intercept)   -1.4298676  0.0752043 -19.013   <2e-16 ***\n#> age            0.0011486  0.0017761   0.647    0.518    \n#> sex            0.0359388  0.0412622   0.871    0.384    \n#> pre_avg_purch  0.0148262  0.0009264  16.003   <2e-16 ***\n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> (Dispersion parameter for binomial family taken to be 1)\n#> \n#>     Null deviance: 13626  on 9999  degrees of freedom\n#> Residual deviance: 13249  on 9996  degrees of freedom\n#> AIC: 13257\n#> \n#> Number of Fisher Scoring iterations: 4\n```\n:::\n:::\n\n::: {.cell hash='07_matching_cache/html/unnamed-chunk-12_ed2d7b25d5812f997293dec106b5e386'}\n\n```{.r .cell-code}\n# Add propensities to table\ndf_aug <- df %>% mutate(propensity = predict(model_prop, type = \"response\"))\n# \ndf_ipw <- df_aug %>% mutate(ipw = (card/propensity) + ((1-card) / (1-propensity)))\n```\n:::\n\n::: {.cell hash='07_matching_cache/html/unnamed-chunk-13_234e2d80f486d3c5f787e6267f916b0c'}\n\n```{.r .cell-code}\nmodel_ipw <- lm(avg_purch ~ card,\n                data = df_ipw, \n                weights = ipw)\nsummary(model_ipw)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = avg_purch ~ card, data = df_ipw, weights = ipw)\n#> \n#> Weighted Residuals:\n#>      Min       1Q   Median       3Q      Max \n#> -205.353  -28.995   -0.275   28.787  214.307 \n#> \n#> Coefficients:\n#>             Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept)  70.2628     0.4320  162.66   <2e-16 ***\n#> card         14.9573     0.6109   24.48   <2e-16 ***\n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 43.19 on 9998 degrees of freedom\n#> Multiple R-squared:  0.05657,\tAdjusted R-squared:  0.05647 \n#> F-statistic: 599.5 on 1 and 9998 DF,  p-value: < 2.2e-16\n```\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}